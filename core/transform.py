import functools

 # Generic transform utilities

def compose(*functions):
    '''Returns a function defined by composing list of single-argument functions.

        functions = [f1, f2, ..., f_n]
        => lambda x: f1(f2(...f_n(x)...))
    '''
    return functools.reduce(
        lambda f, g: lambda x: f(g(x)),
        functions,
        lambda x: x
    )

def get_key(key):
    '''Similar to the Clojure (:key ) operator. Returns a lambda-function
    that maps a dictionary to the value associated to "key" in the dictionary.
    '''
    return lambda dict_: dict_.get(key)
