#!/usr/bin/env python3

import json
import logging
import argparse
import settings
from scipy import sparse
from core import Encoder


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('config', help='JSON file with .Encoder config')
    parser.add_argument('infile', help='one JSON object per line')
    parser.add_argument('outfile', help='numpy NPZ format')
    args = parser.parse_args()
    settings.configure_logging()

    config = json.load(open(args.config))
    encoder = Encoder(**config['Encoder'])

    logging.info('reading %s', args.infile)
    records = map(json.loads, open(args.infile))
    features = sparse.vstack(map(encoder.encode, records))
    logging.info('features.shape => %s', features.shape)
    logging.info('features.nnz => %s', features.nnz)

    with open(args.outfile, 'wb') as fh:
        logging.info('writing %s', args.outfile)
        sparse.save_npz(fh, features)
