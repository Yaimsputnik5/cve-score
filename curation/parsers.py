import logging
import re

LOGGER = logging.getLogger('cve-score')

FILE_KEY = 'file'


class TextParser(object):
    '''Parser for reading a text file and extracting a list of tokens.
    It is a lambda function operating on dictionaries. Each input object is
    expected to have a `FILE_KEY` field specifying the absolute path of the
    file, and it returns the same object with a new key added with a list
    of extracted tokens.
    '''
    def __init__(self, regex, target_key, to_case=None, **kwargs):
        '''Arguments:
            regex: pattern defining the token(s) to extract files.
            target_key: name of the key holding the extracted tokens.
            to_case: [None|"lower"|"upper"] specifies target transform
                for case of captured tokens.
        '''
        self.pattern = re.compile(regex)
        self.target_key = target_key
        self.transform = getattr(str, to_case) if to_case else str

    def __call__(self, data):
        filename = data[FILE_KEY]
        try:
            with open(filename) as fh:
                tokens = list(map(self.transform,
                    self.pattern.findall(fh.read())))
            data[self.target_key] = tokens
        except Exception as ex:
            LOGGER.warn('reading %s => %s', filename, ex)

        return data
