#!/usr/bin/env python3

import argparse
import logging

LOGGING_CFG = {
    'format': '%(asctime)s %(levelname)s %(message)s',
    'level': 'INFO'
}
DEST_TMPL = '{}.{:02d}'


def get_handles(filename, count):
    '''Opens sequence of writable file objects following the naming pattern
    `filename.<N>` for N=1,...,`count`, and returns these as a list.
    '''
    def _open(filename):
        fh = open(filename, 'w')
        logging.info('writing %s', filename)
        return fh

    return [_open(DEST_TMPL.format(filename, i+1)) for i in range(count)]


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('infile', help='file of JSON records split')
    parser.add_argument('count', type=int, help='number of target files')
    args = parser.parse_args()
    logging.basicConfig(**LOGGING_CFG)

    with open(args.infile) as f_in:
        logging.info('reading %s', args.infile)
        handles = get_handles(args.infile, args.count)
        for (n_record, record) in enumerate(f_in):
            i_handle = n_record % args.count
            handles[i_handle].write('{}'.format(record))

    for handle in handles:
        handle.close()
