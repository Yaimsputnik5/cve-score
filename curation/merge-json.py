#!/usr/bin/env python3

import json
import logging
import argparse

DEFAULT_LOGGING = {
    'format': '%(asctime)s %(levelname)s %(message)s',
    'level': logging.INFO,
}


def index(keyname, filename):
    '''Indexes a file of JSON records the "keyname" attributes.'''
    with open(filename) as fh:
        data = {record[keyname]: record for record in map(json.loads, fh)}

    logging.info('read %d unique records from %s', len(data), filename)
    return data

def merge(left_index, right_index):
    '''Merges the right records into the left records, returning the set
    of merged records.'''
    for key, record in left_index.items():
        record.update(right_index.get(key, {}))

    return left_index.values()


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('leftfile')
    parser.add_argument('rightfile')
    parser.add_argument('outfile')
    parser.add_argument('--keyname', default='cveid',
        help='join key name [cveid]')
    args = parser.parse_args()
    logging.basicConfig(**DEFAULT_LOGGING)

    left_index = index(args.keyname, args.leftfile)
    right_index = index(args.keyname, args.rightfile)
    with open(args.outfile, 'w') as fh:
        logging.info('writing %s', args.outfile)
        for record in merge(left_index, right_index):
            fh.write('%s\n' % json.dumps(record))
