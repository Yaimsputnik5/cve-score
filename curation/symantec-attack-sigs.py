#!/usr/bin/env python3

import click
import io
import json
import logging
import re
import requests

from lxml.html import parse
from urllib.parse import urljoin

LOGGING_CFG = {
    'format': '%(asctime)s %(levelname)s %(message)s',
    'level': 'INFO'
}

BASE_URL = 'https://www.symantec.com/security_response/attacksignatures/'
ANCHOR_XPATH = 'body//div[@class="contentPane"]//a'


def transform(element):
    '''Extracts data from a single HTML (anchor) element, returning a JSON
    serializable object. An empty object is returned on invalid input.
    '''
    text, href = element.text, element.get('href', '')
    match = re.match('.*asid=(\\d+)', href)
    return {} if not match else {
        'attackSignature': f'asid-{match.group(1)}',
        'title': text,
        'url': urljoin(BASE_URL, href),
    }


@click.command()
@click.argument('outfile')
def fetch(outfile):
    '''Emits an line-separated JSON list to OUTFILE indexing Symantec
    attack signature data.
    '''
    logging.info('requesting %s', BASE_URL)
    resp = requests.get(BASE_URL)
    resp.raise_for_status()
    html = parse(io.StringIO(resp.text))
    with open(outfile, 'w') as fh:
        logging.info('writing %s', outfile)
        for record in filter(None, map(transform, html.xpath(ANCHOR_XPATH))):
            fh.write(f'{json.dumps(record)}\n')


if __name__ == '__main__':
    logging.basicConfig(**LOGGING_CFG)
    fetch()
